{"version":3,"sources":["webpack:///./src/components/PostListing/CVView.jsx","webpack:///./src/components/PostListing/ProjectView.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/tag.jsx"],"names":["CVView","props","className","style","width","postList","map","post","i","to","path","key","title","fontStyle","marginBottom","hired","date","marginTop","fontWeight","firm","department","respons","ProjectView","PostListing","render","getPostList","category","this","postEdges","forEach","postEdge","push","node","fields","slug","postdate","tags","frontmatter","img","startdate","position","excerpt","timeToRead","console","log","React","Component","TagTemplate","tag","pageContext","data","allMarkdownRemark","edges","config","siteTitle","pageQuery"],"mappings":"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","file":"component---src-templates-tag-jsx-c2c20510b0fcaabd3616.js","sourcesContent":["import React from 'react';\nimport {Link} from 'gatsby';\nconst CVView = (props) => {\n  return(\n    <div className=\"cvView flex column center\">\n      <h2>Work Experience</h2>\n      <hr style={{width: '5rem'}}/>\n      <div className=\"flex wrap center\">\n      {/* Your post list here. */\n        props.postList.map((post,i) => (\n          <Link to={post.path} key={i}>\n            <div className=\"jobCard flex column\">\n              <div className=\"title\">\n                <h3>{post.title}</h3>\n              </div>\n              <div className=\"content flex column\">\n                <p style={{fontStyle:\"italic\", marginBottom: '0'}}>{post.hired} - {post.date}</p>\n                <p style={{marginTop: '0', marginBottom: '0', fontWeight: '700'}}>@ {post.firm}</p>\n                <p style={{marginTop: '0', marginBottom: '0'}}>Dep: {post.department}</p>\n                <p>{post.respons}</p>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default CVView;\n","import React from 'react';\nimport {Link} from 'gatsby';\nconst ProjectView = (props) => {\n  return(\n    <div className=\"cvView flex column center\">\n      <h2>Projects</h2>\n      <hr style={{width: '5rem'}}/>\n      <div className=\"flex wrap center\">\n      {/* Your post list here. */\n        props.postList.map((post,i) => (\n          <Link to={post.path} key={i}>\n            <div className=\"jobCard flex column\">\n              <div className=\"title\">\n                <h3>{post.title}</h3>\n              </div>\n              <div className=\"content flex column\">\n                <p style={{fontStyle:\"italic\", marginBottom: '0'}}>{post.date[6]}{post.date[7]}{post.date[8]}{post.date[9]}</p>\n                <p style={{marginTop: '0', marginBottom: '0', fontWeight: '700'}}>{post.firm}</p>\n                <p style={{marginTop: '0', marginBottom: '0'}}>Role: {post.department}</p>\n                <p>{post.respons}</p>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default ProjectView;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport CVView from './CVView';\nimport ProjectView from './ProjectView';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        postdate: postEdge.node.fields.date,\n        tags: postEdge.node.frontmatter.tags,\n        img: postEdge.node.frontmatter.img,\n        title: postEdge.node.frontmatter.title,\n        firm: postEdge.node.frontmatter.firm,\n        department: postEdge.node.frontmatter.department,\n        date: postEdge.node.frontmatter.date,\n        startdate: postEdge.node.frontmatter.startdate,\n        hired: postEdge.node.frontmatter.hired,\n        respons: postEdge.node.frontmatter.respons,\n        position: postEdge.node.frontmatter.position,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n      });\n    });\n    console.log(postList);\n    return postList;\n  }\n  render = () => {\n    const postList = this.getPostList();\n    if(this.props.category === \"CV\") {\n      return (\n        <CVView postList={postList} />\n      )\n    } else if(this.props.category == \"project\") {\n      return (\n        <ProjectView postList={postList} />\n      )\n    } else {\n      return (\n        <div>\n          {/* Your post list here. */\n          postList.map((post,i) => (\n            <Link to={post.path} key={i}>\n              <div className=\"flex center\">\n                <div>\n                  <h2>{post.title}</h2>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )\n    }\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            firm\n            department\n            tags\n            img {\n              childImageSharp {\n                  fluid(maxWidth: 600, quality: 50) {\n                    src\n                }\n              }\n            }\n            date\n            hired\n            respons\n            position\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}